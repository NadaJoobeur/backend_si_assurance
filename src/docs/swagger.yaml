openapi: 3.0.0
info:
  title: API Assurance - Personnes
  version: 1.0.0
  description: Documentation des API pour la gestion des personnes

servers:
  - url: http://localhost:3000/api

paths:
  /personnes:
    get:
      summary: Récupérer la liste des personnes
      responses:
        '200':
          description: Liste des personnes récupérée avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Personne'

    post:
      summary: Créer une nouvelle personne
      requestBody:
        description: Objet personne à créer
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonneInput'
      responses:
        '201':
          description: Personne créée avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Personne'

  /personnes/{id}:
    get:
      summary: Récupérer une personne par ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la personne
          schema:
            type: integer
      responses:
        '200':
          description: Personne trouvée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Personne'
        '404':
          description: Personne non trouvée

components:
  schemas:
    Personne:
      type: object
      properties:
        id:
          type: integer
          example: 1
        ownerId:
          type: integer
          example: 123
          description: ID du propriétaire (user)
        nom:
          type: string
          example: Dupont
        prenom:
          type: string
          example: Jean
        raisonSociale:
          type: string
          example: Société Dupont
        dateDeNaissance:
          type: string
          format: date
          example: 1980-01-15
        activite:
          type: string
          example: Assurance
        adresse:
          type: string
          example: 12 rue des Lilas, Paris
        telephone:
          type: string
          example: "+33123456789"
        mails:
          type: array
          items:
            type: string
            format: email
          example: ["jean.dupont@example.com", "contact@dupont.com"]
        blackList:
          type: boolean
          example: false

    PersonneInput:
      type: object
      required:
        - ownerId
        - nom
        - prenom
      properties:
        ownerId:
          type: integer
          description: ID du propriétaire (user)
        nom:
          type: string
        prenom:
          type: string
        raisonSociale:
          type: string
        dateDeNaissance:
          type: string
          format: date
        activite:
          type: string
        adresse:
          type: string
        telephone:
          type: string
        mails:
          type: array
          items:
            type: string
            format: email
        blackList:
          type: boolean
